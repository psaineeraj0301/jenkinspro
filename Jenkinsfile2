pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'your_docker_image_name'
        DOCKER_REPO_DEV = 'your_dockerhub_dev_repo'
        DOCKER_REPO_PROD = 'your_dockerhub_prod_repo'
        SERVER_HOST = 'your_server_ip'
        SERVER_USER = 'your_ssh_username'
        SERVER_PORT = '22' // Default SSH port
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/sriram-R-krishnan/devops-build.git'
            }
        }

        stage('Build and Push') {
            when {
                branch 'dev'
            }
            steps {
                script {
                    sh 'docker build -t $DOCKER_IMAGE .'
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                        sh 'docker tag $DOCKER_IMAGE $DOCKER_REPO_DEV'
                        sh 'docker push $DOCKER_REPO_DEV'
                    }
                }
            }
        }

        stage('Deploy to Dev') {
            when {
                branch 'dev'
            }
            steps {
                script {
                    sshagent(credentials: ['your_ssh_credentials_id']) {
                        sh "ssh -o StrictHostKeyChecking=no -p $SERVER_PORT $SERVER_USER@$SERVER_HOST 'docker pull $DOCKER_REPO_DEV && docker-compose -f /path/to/docker-compose-dev.yml up -d'"
                    }
                }
            }
        }

        stage('Deploy to Prod') {
            when {
                branch 'master'
            }
            steps {
                script {
                    sshagent(credentials: ['your_ssh_credentials_id']) {
                        sh "ssh -o StrictHostKeyChecking=no -p $SERVER_PORT $SERVER_USER@$SERVER_HOST 'docker pull $DOCKER_REPO_PROD && docker-compose -f /path/to/docker-compose-prod.yml up -d'"
                    }
                }
            }
        }
    }
}
